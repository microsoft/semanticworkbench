// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/python
{
  "name": "semantic-workbench",
  // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
  "image": "mcr.microsoft.com/devcontainers/python:1-3.11-bookworm",

  // Features to add to the dev container. More info: https://containers.dev/features.
  "features": {
    "ghcr.io/devcontainers-contrib/features/poetry:2": {
      "version": "latest"
    },
    "ghcr.io/jungaretti/features/make:1": {},
    "ghcr.io/devcontainers/features/node:1": {
      "nodeGypDependencies": true,
      "installYarnUsingApt": true,
      "version": "lts",
      "nvmVersion": "latest"
    }
    // "ghcr.io/devcontainers/features/azure-cli:1": {}
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [3000, 4000],

  // Use 'portsAttributes' to configure the behavior of specific port forwarding instances.
  "portsAttributes": {
    "3000": {
      "label": "service:semantic-workbench"
    },
    "4000": {
      "label": "app:semantic-workbench"
    }
  },

  // Use 'otherPortsAttributes' to set the defaults that are applied to all ports, unless overridden
  // with port-specific entries in 'portsAttributes'.
  // "otherPortsAttributes": {},

  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": {
    // Build and restore dependencies for key projects in the repo
    "make_workbench_app": "make -C /workspaces/semanticworkbench/semantic-workbench/v1/app",
    "make_workbench_service": "make -C /workspaces/semanticworkbench/semantic-workbench/v1/service",
    "make_python_examples01": "make -C /workspaces/semanticworkbench/examples/python-example01",
    // Set up git to automatically set up the remote when pushing if it doesn't exist
    "git_config": "git config --add push.autoSetupRemote true"
  },

  // Configure tool-specific properties.
  "customizations": {
    "vscode": {
      "extensions": [
        "GitHub.copilot",
        "aaron-bond.better-comments",
        "aarontamasfe.even-better-toml",
        "dbaeumer.vscode-eslint",
        "esbenp.prettier-vscode",
        "ms-python.black-formatter",
        "ms-python.flake8",
        "ms-vscode.makefile-tools",
        "ms-python.python",
        "streetsidesoftware.code-spell-checker"
      ]
    }
  }

  // Uncomment to run commands after the container is created.
  // "containerEnv": {
  //  Disabled because it is being applied twice for the app because something else is setting it
  //  and appears to be adding it to whatever it is already set to. The reason I was adding it was
  //  to increase the memory limit across the whole container for pylance.  Alternate "fix" may be
  //  to use a higher capacity container and/or fewer open projects in the workspace.
  // 	"NODE_OPTIONS": "--max-old-space-size=8192"
  // }

  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
  // "remoteUser": "root"
}
