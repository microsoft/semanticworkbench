// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/python
{
  "name": "semantic-workbench",
  // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
  "image": "mcr.microsoft.com/devcontainers/python:1-3.11-bookworm",
  "hostRequirements": {
    "cpus": 8,
    "memory": "32gb",
    "storage": "50gb"
  },
  // Features to add to the dev container. More info: https://containers.dev/features.
  "features": {
    "ghcr.io/jungaretti/features/make:1": {},
    "ghcr.io/jungaretti/features/vim:1": {},
    "ghcr.io/devcontainers-contrib/features/pipx-package:1": {
      "package": "uv",
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/node:1": {
      "nodeGypDependencies": true,
      "installYarnUsingApt": true,
      "version": "lts",
      "nvmVersion": "latest"
    },
    "ghcr.io/devcontainers/features/azure-cli:1": {},
    "ghcr.io/devcontainers/features/docker-in-docker:2": {},
    "ghcr.io/devcontainers-extra/features/ffmpeg-apt-get:1": {}
  },
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [3000, 4000, 5000],
  // Use 'portsAttributes' to configure the behavior of specific port forwarding instances.
  "portsAttributes": {
    "3000": {
      "label": "service:semantic-workbench"
    },
    "4000": {
      "label": "app:semantic-workbench"
    },
    "5000": {
      "label": "app:workspaces"
    }
  },
  // Use 'otherPortsAttributes' to set the defaults that are applied to all ports, unless overridden
  // with port-specific entries in 'portsAttributes'.
  // "otherPortsAttributes": {},
  "updateContentCommand": "make -C ${containerWorkspaceFolder}",
  "postCreateCommand": "git config --global push.autoSetupRemote true",
  // Configure tool-specific properties.
  "customizations": {
    "codespaces": {
      "openFiles": [".devcontainer/POST_SETUP_README.md"]
    },
    "vscode": {
      "extensions": [
        "GitHub.copilot",
        "github.codespaces",
        "aaron-bond.better-comments",
        "charliermarsh.ruff",
        "dbaeumer.vscode-eslint",
        "epivision.vscode-file-header",
        "esbenp.prettier-vscode",
        "github.vscode-github-actions",
        "ms-azuretools.vscode-docker",
        "ms-python.debugpy",
        "ms-vscode.extension-test-runner",
        "ms-python.python",
        "ms-vscode.makefile-tools",
        "ms-vscode.vscode-node-azure-pack",
        "tamasfe.even-better-toml",
        "streetsidesoftware.code-spell-checker"
      ]
    }
  },
  "containerEnv": {
    // The default `uv` cache dir is at /home/vscode/.cache/uv, which is on a different disk than the default
    // for workspaces.
    // Ensure the cache is on the same disk for optimal uv performance. https://docs.astral.sh/uv/concepts/cache/#cache-directory
    // ${containerWorkspaceFolder} == /workspaces/repo-name
    "UV_CACHE_DIR": "${containerWorkspaceFolder}/../.cache/uv"
  }
  // Connect as root instead. More info: https://aka.ms/dev-containers-non-root.
  // "remoteUser": "root"
}
