[project]
name = "document-assistant"
version = "0.1.0"
description = "A python Semantic Workbench OpenAI assistant for document editing."
authors = [{ name = "Semantic Workbench Team" }]
readme = "README.md"
requires-python = ">=3.11,<3.13"
dependencies = [
    "aiofiles>=24.0,<25.0",
    "assistant-drive>=0.1.0",
    "assistant-extensions[attachments, mcp]>=0.1.0",
    "mcp-extensions[openai]>=0.1.0",
    "content-safety>=0.1.0",
    "deepmerge>=2.0",
    "httpx>=0.28,<1.0",
    "markitdown[docx,outlook,pptx,xlsx]==0.1.1",
    "chat-context-toolkit>=0.1.0",
    "openai>=1.61.0",
    "openai-client>=0.1.0",
    "pdfplumber>=0.11.2",
    "pendulum>=3.1,<4.0",
    "pydantic-ai[openai,athropic]>=0.2,<0.3",
    "pydantic-extra-types>=2.10,<3.0",
    "python-dotenv>=1.1,<2.0",
    "python-liquid>=2.0,<3.0",
    "PyYAML>=6.0,<7.0",
    "tiktoken>=0.9.0",
]

[tool.hatch.build.targets.wheel]
packages = ["assistant"]

[tool.uv]
package = true

[tool.uv.sources]
anthropic-client = { path = "../../libraries/python/anthropic-client", editable = true }
assistant-drive = { path = "../../libraries/python/assistant-drive", editable = true }
assistant-extensions = { path = "../../libraries/python/assistant-extensions", editable = true }
mcp-extensions = { path = "../../libraries/python/mcp-extensions", editable = true }
content-safety = { path = "../../libraries/python/content-safety/", editable = true }
openai-client = { path = "../../libraries/python/openai-client", editable = true }
chat-context-toolkit = { path = "../../libraries/python/chat-context-toolkit", editable = true }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = ["pyright>=1.1.389", "pytest", "pytest-asyncio"]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
asyncio_mode = "auto"
