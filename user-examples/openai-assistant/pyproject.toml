[tool.poetry]
name = "openai-assistant"
version = "0.1.0"
description = "Exploration of a Semantic Workbench OpenAI assistant."
authors = ["Semantic Workbench Explorer"]
readme = "README.md"
packages = [{ include = "openai_assistant" }]

[tool.poetry.dependencies]
python = "~3.11"
openai = "^1.3.9"

semantic-workbench-api-model = { path = "../../semantic-workbench/v1/service/semantic-workbench-api-model", develop = true, extras=["dev"]  }
semantic-workbench-assistant = { path = "../../semantic-workbench/v1/service/semantic-workbench-assistant", develop = true, extras=["dev"]  }
semantic-workbench-service = { path = "../../semantic-workbench/v1/service/semantic-workbench-service", develop = true, extras=["dev"] }

black = { version = "^24.3.0", optional = true }
flake8 = { version = "^6.1.0", optional = true }
tiktoken = "^0.7.0"
azure-ai-contentsafety = "^1.0.0"

[tool.poetry.extras]
dev = ["black", "flake8"]

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 120
profile = "black"

[tool.pyright]
exclude = ["venv", ".venv"]
