[tool.poetry]
name = "semantic-workbench-service-virtualenv"
package-mode = false
description = "installs other all semantic-workbench/v1/* packages"

[tool.poetry.dependencies]
python = "~3.11"
semantic-workbench-api-model = { path = "./semantic-workbench-api-model", develop = true }
semantic-workbench-assistant = { path = "./semantic-workbench-assistant", develop = true }
semantic-workbench-service = { path = "./semantic-workbench-service", develop = true }

[tool.poetry.group.dev.dependencies]
asgi-lifespan = "^2.1.0"
pytest = "^7.4.3"
pytest-asyncio = "^0.23.5.post1"
pytest-docker = "^3.1.1"
pytest-httpx = "^0.30.0"
ruff = "^0.6.4"

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
exclude = [".venv"]

[tool.pytest.ini_options]
addopts = "-vv"
log_cli = true
log_cli_level = "WARNING"
log_cli_format = "%(asctime)s | %(levelname)-7s | %(name)s | %(message)s"
testpaths = [
    "semantic-workbench-assistant/tests",
    "semantic-workbench-service/tests"
]
asyncio_mode="auto"


# fail tests on warnings that aren't explicitly ignored
filterwarnings = [
    "error",
    # stream warnings are from bugs in starlette - hopefully they fix this
    "ignore: Unclosed .MemoryObject(Send|Receive)Stream.:ResourceWarning",
    # aiosqlite doesn't handle cancelations correctly
    "ignore: Exception in thread Thread:pytest.PytestUnhandledThreadExceptionWarning",
    # asyncpg sometimes fails to close sockets
    "ignore: unclosed <socket.socket:ResourceWarning",
]
